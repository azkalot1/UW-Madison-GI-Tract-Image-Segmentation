# @package _global_

# example hyperparameter optimization of some experiment with Optuna:
# python train.py -m hparams_search=mnist_optuna experiment=example

defaults:
  - override /hydra/sweeper: optuna

# choose metric which will be optimized by Optuna
# make sure this is the correct name of some metric logged in lightning module!
optimized_metric: "val/dice"

# here we define Optuna hyperparameter search
# it optimizes for value returned from function with @hydra.main decorator
# docs: https://hydra.cc/docs/next/plugins/optuna_sweeper
hydra:
  sweeper:
    _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
    storage: null
    study_name: null
    n_jobs: 1
    direction: maximize
    n_trials: 5
    sampler:
      _target_: optuna.samplers.TPESampler
      seed: 0
      n_startup_trials: 1
    search_space:
      model.net.encoder_name:
        type: categorical
        choices: ['resenet18', 'resnet34']
      model.optimizer_name:
        type: categorical
        choices: ['AdamP', 'AdaBound', 'AdaBelief', 'NovoGrad']
